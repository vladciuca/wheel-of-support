{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vladciuca/Desktop/support-wheel/components/AddParticipant.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Icon } from \"react-native-elements\";\n\nvar useKeyboardHeight = function useKeyboardHeight() {\n  var keyboardHeight = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    var keyboardWillShow = function keyboardWillShow(KeyboardEvent) {\n      Animated.timing(keyboardHeight, {\n        duration: KeyboardEvent.duration,\n        toValue: KeyboardEvent.endCoordinates.height,\n        useNativeDriver: true\n      }).start();\n    };\n\n    var keyboardWillHide = function keyboardWillHide(KeyboardEvent) {\n      Animated.timing(keyboardHeight, {\n        duration: KeyboardEvent.duration,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    };\n\n    var keyboardWillShowSub = Keyboard.addListener(\"keyboardWillShow\", keyboardWillShow);\n    var keyboardWillHideSub = Keyboard.addListener(\"keyboardWillHide\", keyboardWillHide);\n    return function () {\n      keyboardWillHideSub.remove();\n      keyboardWillShowSub.remove();\n    };\n  }, [keyboardHeight]);\n  return keyboardHeight;\n};\n\nvar AddParticipant = function AddParticipant(_ref) {\n  var handleAddParticipant = _ref.handleAddParticipant;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    handleAddParticipant(value);\n\n    if (value.length > 3) {\n      setValue(\"\");\n    }\n  };\n\n  var inputRef = useRef();\n  useEffect(function () {\n    inputRef.current.focus();\n  }, []);\n  return React.createElement(View, {\n    style: _objectSpread({}, styles.inputContainer),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    ref: inputRef,\n    style: styles.input,\n    placeholder: \"Add Participant\",\n    value: value,\n    onChangeText: function onChangeText(text) {\n      return setValue(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"person-add-alt-1\",\n    color: \"#FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default AddParticipant;\nvar styles = StyleSheet.create({\n  inputContainer: {\n    flexDirection: \"row\",\n    position: \"absolute\",\n    zIndex: 1\n  },\n  input: {\n    padding: 10,\n    width: 250,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowRadius: 5\n  },\n  addWrapper: {\n    height: 40,\n    width: 40,\n    backgroundColor: \"#a487c3\",\n    borderRadius: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: 10\n  }\n});","map":{"version":3,"sources":["/Users/vladciuca/Desktop/support-wheel/components/AddParticipant.js"],"names":["React","useState","useRef","useEffect","Icon","useKeyboardHeight","keyboardHeight","Animated","Value","current","keyboardWillShow","KeyboardEvent","timing","duration","toValue","endCoordinates","height","useNativeDriver","start","keyboardWillHide","keyboardWillShowSub","Keyboard","addListener","keyboardWillHideSub","remove","AddParticipant","handleAddParticipant","value","setValue","handleSubmit","length","inputRef","focus","styles","inputContainer","input","text","addWrapper","StyleSheet","create","flexDirection","position","zIndex","padding","width","backgroundColor","borderRadius","shadowColor","shadowRadius","justifyContent","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Animated,\n  Keyboard,\n} from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nconst useKeyboardHeight = () => {\n  const keyboardHeight = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    const keyboardWillShow = (KeyboardEvent) => {\n      Animated.timing(keyboardHeight, {\n        duration: KeyboardEvent.duration,\n        toValue: KeyboardEvent.endCoordinates.height,\n        useNativeDriver: true,\n      }).start();\n    };\n\n    const keyboardWillHide = (KeyboardEvent) => {\n      Animated.timing(keyboardHeight, {\n        duration: KeyboardEvent.duration,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    };\n\n    const keyboardWillShowSub = Keyboard.addListener(\n      \"keyboardWillShow\",\n      keyboardWillShow\n    );\n    const keyboardWillHideSub = Keyboard.addListener(\n      \"keyboardWillHide\",\n      keyboardWillHide\n    );\n\n    return () => {\n      keyboardWillHideSub.remove();\n      keyboardWillShowSub.remove();\n    };\n  }, [keyboardHeight]);\n\n  return keyboardHeight;\n};\n\nconst AddParticipant = ({ handleAddParticipant }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = () => {\n    handleAddParticipant(value);\n    if (value.length > 3) {\n      setValue(\"\");\n    }\n  };\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  // const keyboardH = useKeyboardHeight();\n\n  // console.log(keyboardH);\n\n  return (\n    <View\n      style={{ ...styles.inputContainer }}\n      // extraHeight={300}\n      // enabledOnAndroid={true}\n      // extraScrollHeight={70}\n      // automaticallyAdjustContentInsets={true}\n      // enableOnAndroid={true}\n      // keyboardShouldPersistTaps=\"handled\"\n      // scrollEnabled={true}\n    >\n      {/* <View  behavior=\"height\"> */}\n      <TextInput\n        ref={inputRef}\n        style={styles.input}\n        placeholder={\"Add Participant\"}\n        value={value}\n        onChangeText={(text) => setValue(text)}\n      ></TextInput>\n      <TouchableOpacity onPress={() => handleSubmit()}>\n        <View style={styles.addWrapper}>\n          <Icon name=\"person-add-alt-1\" color=\"#FFF\" />\n        </View>\n      </TouchableOpacity>\n      {/* </View> */}\n    </View>\n  );\n};\n\nexport default AddParticipant;\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    // alignItems: \"center\",\n    flexDirection: \"row\",\n    // marginTop: -100,\n    position: \"absolute\",\n    // width: \"100%\",\n    // justifyContent: \"center\",\n    zIndex: 1,\n  },\n  input: {\n    padding: 10,\n    width: 250,\n    backgroundColor: \"#FFF\",\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowRadius: 5,\n  },\n  addWrapper: {\n    height: 40,\n    width: 40,\n    backgroundColor: \"#a487c3\",\n    borderRadius: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}